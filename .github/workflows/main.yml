name: Pull Requests

on:
  pull_request:
    branches: [master]

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [8.x, 10.x, 12.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up Node
        uses: actions/setup-node@master
        with:
          version: ${{matrix.node-version}}
      - name: Set up CodeClimate
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 -o /tmp/cc-test-reporter
          chmod +x /tmp/cc-test-reporter
        env:
          CC_TEST_REPORTER_ID:  ${{ secrets.CC_TEST_REPORTER_ID }}
          GIT_COMMIT_SHA:       ${GITHUB_SHA}
          GIT_BRANCH:           ${GITHUB_REF}
      - name: Install Dependencies
        run: npm ci
      - name: Build
        if: success()
        run: npm run build
      - name: Test
        if: success()
        run: |
          /tmp/cc-test-reporter before-build --id ${{ secrets.CC_TEST_REPORTER_ID }}
          npm test
          /tmp/cc-test-reporter format-coverage --input-type lcov --output coverage/codeclimate.bin coverage/lcov.info
      - name: CodeClimate Report
        if: success()
        run: |
          /tmp/cc-test-reporter upload-coverage --id ${{ secrets.CC_TEST_REPORTER_ID }} --input coverage/codeclimate.bin
          /tmp/cc-test-reporter after-build --id ${{ secrets.CC_TEST_REPORTER_ID }} --exit-code 0
        env:
          GIT_COMMIT_SHA:       ${GITHUB_SHA}
          GIT_BRANCH:           ${GITHUB_REF}
      - name: CodeClimate Report
        if: failure()
        run: |
          /tmp/cc-test-reporter after-build --id ${{ secrets.CC_TEST_REPORTER_ID }} --exit-code 1
        env:
          GIT_COMMIT_SHA:       ${GITHUB_SHA}
          GIT_BRANCH:           ${GITHUB_REF}
