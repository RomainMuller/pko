name: Validation Build

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 13.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{github.head_ref}}

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.node-version}}

      - name: Locate Yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore Yarn cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |-
            ${{ runner.os }}-yarn-

      - name: Set up CodeClimate
        if: matrix.node-version == '10.x'
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 -o /tmp/cc-test-reporter
          chmod +x /tmp/cc-test-reporter
          export GIT_COMMIT_SHA=$(git rev-parse HEAD)
          /tmp/cc-test-reporter before-build
        env:
          CC_TEST_REPORTER_ID:  ${{secrets.CC_TEST_REPORTER_ID}}
          GIT_BRANCH:           ${{github.head_ref}}

      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Test
        run: yarn test

      - name: CodeClimate Report
        if: success() && matrix.node-version == '10.x'
        run: |
          export GIT_COMMIT_SHA=$(git rev-parse HEAD)
          /tmp/cc-test-reporter after-build -t lcov
        env:
          CC_TEST_REPORTER_ID:  ${{secrets.CC_TEST_REPORTER_ID}}
          GIT_BRANCH:           ${{github.head_ref}}


  approve-dependabot:
    name: Approve Dependabot
    runs-on: ubuntu-latest
    needs: [build-and-test]

    if: github.event_name == 'pull_request' && (github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]')

    steps:
      - name: Approve Pull Request
        uses: hmarr/auto-approve-action@v2.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
